# generated by RedBarrel's rb-quickstart script
meta (
    description """An URL Shortener.

The goal is to demonstrate a few **RedBarrel** features:

- how to set the content type of the response
- how to describe the response status codes

Check more doc on: http://redbarrel.readthedocs.org

""",
    title "An URL Shortener",
    version 1.0
);


path index (
    description "Index -- Just a landing page",
    method GET,
    url /,
    response-headers (
        set Content-Type "text/html"
    ),
    response-status (
        describe 200 "Success"
    ),
    use file:shortme/index.html

);

path media (
    method GET,
    url /js/{name},
    use directory:media
);

path shorten (
    description "Shortens an URL",
    method POST,
    url /shorten,
    request-body (
        description "Contains the URL to shorten"
    ),
    response-body (
        description "The shortened URL"
    ),
    response-headers (
        set Content-Type "text/plain"
    ),
    response-status (
        describe 200 "Success",
        describe 400 "I don't like the URL provided"
    ),

    use python:shortme.shorten.shorten
);

path shorten_html (
    description "HTML view to shorten an URL",
    method GET,
    url /shorten.html,
    response-headers (
        set Content-Type "text/html"
    ),
    response-status (
        describe 200 "Success"
    ),
    use python:shortme.shorten.shorten_html
);

path shortened_html (
    description "HTML page that displays the result",
    method GET,
    url /shortened.html,
    response-headers (
        set Content-Type "text/html"
    ),
    response-status (
        describe 200 "Success"
    ),
    use python:shortme.shorten.shortened_html
);


path redirect (
    description "Redirects",
    method GET,
    url /r/{redirect},
    response-status (
        describe 303 "Redirecting to original",
        describe 404 "Not Found"
    ),
    use python:shortme.shorten.redirect
);

path stats (
    description "Returns a number of hits per redirects",
    method GET,
    url /stats,
    response-status (
        describe 200 "OK",
        describe 503 "Something went wrong"
    ),
    response-body (
        description "A mapping of url/hits",
        unless type is json return 503
    ),
    response-headers (
        set Content-Type "application/json"
    ),
    use python:shortme.shorten.stats
);

path maps (
    description "Display in real time clicks on maps",
    method GET,
    url /maps,
    response-headers (
        set Content-Type "text/html"
    ),
    response-body (
      alter with python:shortme.shorten.convert_template
    ),
    use file:shortme/maps.html
);


path socketio (
    method GET|POST,
    url /socket.io/{transport:.*?},
    use python:shortme.shorten.setup_socket;
);
